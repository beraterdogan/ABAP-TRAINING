*************************ANA SAYFA**************************************
REPORT ZBE_P_006.

INCLUDE ZBE_O_0061_TOP.
INCLUDE ZBE_P_006_SS.
INCLUDE ZBE_o_0061_FRM.




AT SELECTION-SCREEN.

  CASE SSCRFIELDS.
    WHEN 'BUTS'.
      CALL FUNCTION 'VIEW_MAINTENANCE_CALL'
        EXPORTING
          ACTION    = 'S'
          VIEW_NAME = 'ZBE_T_ISK'.
    WHEN 'BUTU'.
      CALL FUNCTION 'VIEW_MAINTENANCE_CALL'
        EXPORTING
          ACTION    = 'U'
          VIEW_NAME = 'ZBE_T_ISK'.
  ENDCASE.

INITIALIZATION.
  BUT1 = '@10@''Tabloyu Görüntüle' .
  BUT2 = '@0Z@''Tabloyu Değiştir' .

START-OF-SELECTION.


  PERFORM GET_DATA.
  PERFORM SET_FC.
  PERFORM SET_LAYOUT.
  PERFORM DISPLAY_ALV.

*************************TOP************************
TABLES: BKPF, BSEG, ZBE_T_ISK, SSCRFIELDS.
TYPES: BEGIN OF GTY_ISK,
         SELKZ  TYPE SELKZ,
         BUKRS  TYPE BUKRS,
         GJAHR  TYPE GJAHR,
         MONAT  TYPE MONAT,
         BELNR  TYPE BKPF-BELNR,
         LIFNR  TYPE LIFNR,
         ISKO   TYPE ZBE_DE_IO,
         WRBTR  TYPE WRBTR,
         PRINTF TYPE CHAR4,
         WRBTRS TYPE WRBTR,
       END OF GTY_ISK.

TYPES: BEGIN OF GTY_ISKD,
         BUKRS TYPE BUKRS,
         GJAHR TYPE GJAHR,
         BELNR TYPE BKPF-BELNR,
         BUZEI TYPE BUZEI,
         SGTXT TYPE SGTXT,
         GSBER TYPE GSBER,
         SHKZG TYPE SHKZG,
         WRBTR TYPE WRBTR,
       END OF GTY_ISKD.

TYPES: BEGIN OF GTY_ISKMAIN,
         BUZEI TYPE BSEG-BUZEI,
         SGTXT TYPE BSEG-SGTXT,
         GSBER TYPE BSEG-GSBER,
         SHKZG TYPE BSEG-SHKZG,
         WRBTR TYPE WRBTR,
       END OF GTY_ISKMAIN.

TYPES: BEGIN OF GTY_ISKREF,
         BELNR  TYPE BKPF-BELNR,
         BLDAT  TYPE BKPF-BLDAT,
         GJAHR  TYPE BKPF-GJAHR,
         LIFNR  TYPE BSEG-LIFNR,
         XBLNR  TYPE BKPF-XBLNR,
         WRBTR  TYPE BSEG-WRBTR,
         WRBTRI TYPE BSEG-WRBTR,
       END OF GTY_ISKREF.





DATA: GT_ISK TYPE TABLE OF GTY_ISK,
      GS_ISK TYPE GTY_ISK.
DATA: GT_ISKD TYPE TABLE OF GTY_ISKD,
      GS_ISKD TYPE GTY_ISKD.
DATA: GT_ISKREF TYPE TABLE OF GTY_ISKREF,
      GS_ISKREF TYPE GTY_ISKREF.
DATA: GT_ISKMAIN TYPE TABLE OF GTY_ISKMAIN,
      GS_ISKMAIN TYPE GTY_ISKMAIN.
DATA: gt_fatura TYPE ZBE_TT_001,
      gs_fatura TYPE ZBE_S_004.


DATA: GT_FIELDCATALOG TYPE SLIS_T_FIELDCAT_ALV,
      GS_FIELDCATALOG TYPE SLIS_FIELDCAT_ALV.
DATA: GT_FCPOPUP TYPE SLIS_T_FIELDCAT_ALV,
      GS_FCPOPUP TYPE SLIS_FIELDCAT_ALV.

DATA: GS_LAYOUT TYPE SLIS_LAYOUT_ALV.
DATA: GS_LPOPUP TYPE SLIS_LAYOUT_ALV.

DATA: GT_SORT TYPE SLIS_T_SORTINFO_ALV,
      GS_SORT TYPE SLIS_SORTINFO_ALV.

DATA: GT_EVENT TYPE SLIS_T_EVENT,
      GS_EVENT TYPE SLIS_ALV_EVENT.

DATA: GV_SATIR TYPE INT4.
**********************************************SS******************************************

*&---------------------------------------------------------------------*
*& Include          ZBE_P_006_SS
*&---------------------------------------------------------------------*

*
SELECTION-SCREEN BEGIN OF BLOCK TAB1 WITH FRAME TITLE TEXT-001.
PARAMETERS BUKRS TYPE BUKRS OBLIGATORY DEFAULT '1101'.
PARAMETERS GJAHR TYPE GJAHR OBLIGATORY DEFAULT '2021'.
SELECT-OPTIONS MONAT FOR BKPF-MONAT.
SELECT-OPTIONS LIFNR FOR BSEG-LIFNR.
SELECTION-SCREEN END OF BLOCK TAB1.

SELECTION-SCREEN BEGIN OF BLOCK TAB2 WITH FRAME TITLE TEXT-002.
SELECTION-SCREEN PUSHBUTTON 20(30) BUT1 USER-COMMAND BUTS.
SELECTION-SCREEN PUSHBUTTON 65(30) BUT2 USER-COMMAND BUTU.
SELECTION-SCREEN END OF BLOCK TAB2.
*
********************************************FORM**********************************
*&---------------------------------------------------------------------*
*& Include          ZBE_O_0061_FRM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form GET_DATA
*&---------------------------------------------------------------------*

FORM GET_DATA .

  SELECT
  BKPF~BUKRS
  BKPF~GJAHR
  BKPF~MONAT
  BKPF~BELNR
  BSEG~LIFNR
  ZBE_T_ISK~ISKO
  BSEG~WRBTR
  FROM BKPF
  INNER JOIN  BSEG     ON  BSEG~BUKRS     EQ BKPF~BUKRS
                      AND  BSEG~GJAHR     EQ BKPF~GJAHR
                      AND  BSEG~BELNR     EQ BKPF~BELNR
  INNER JOIN ZBE_T_ISK ON ZBE_T_ISK~LIFNR EQ BSEG~LIFNR
  INTO CORRESPONDING FIELDS OF TABLE GT_ISK
*  INTO CORRESPONDING FIELDS OF TABLE @data(gt_table)
    WHERE BKPF~BUKRS EQ BUKRS
    AND   BKPF~GJAHR EQ GJAHR
    AND   BKPF~MONAT IN MONAT
    AND   BSEG~LIFNR IN LIFNR.

  LOOP AT GT_ISK INTO GS_ISK.
    GS_ISK-WRBTRS = GS_ISK-WRBTR.
    GS_ISK-WRBTR = GS_ISK-WRBTR * ( ( 100 - GS_ISK-ISKO ) / 100 ).
    MODIFY GT_ISK FROM GS_ISK.
  ENDLOOP.


  LOOP AT GT_ISK INTO GS_ISK.
    GS_ISK-PRINTF = '@0X@'.
    MODIFY GT_ISK FROM GS_ISK.
  ENDLOOP.

ENDFORM.




FORM SET_FC .
  CLEAR GS_FIELDCATALOG.
  GS_FIELDCATALOG-FIELDNAME = 'BELNR'.
  GS_FIELDCATALOG-HOTSPOT = ABAP_TRUE.
  APPEND GS_FIELDCATALOG TO GT_FIELDCATALOG.
  CLEAR GS_FIELDCATALOG.
  GS_FIELDCATALOG-FIELDNAME = 'ISKO'.
  GS_FIELDCATALOG-SELTEXT_S = 'İsk. Or.'.
  GS_FIELDCATALOG-SELTEXT_M = 'İskonto Or.' .
  GS_FIELDCATALOG-SELTEXT_L = 'İskonto Oranı'.
  GS_FIELDCATALOG-EDIT      = ABAP_TRUE.
  APPEND GS_FIELDCATALOG TO GT_FIELDCATALOG.
  CLEAR GS_FIELDCATALOG.
  GS_FIELDCATALOG-FIELDNAME = 'PRINTF'.
  GS_FIELDCATALOG-SELTEXT_M = 'YAZDIR'.
  GS_FIELDCATALOG-HOTSPOT   = 'X'.
  GS_FIELDCATALOG-ICON      = 'X'.
  APPEND GS_FIELDCATALOG TO GT_FIELDCATALOG.
  CLEAR GS_FIELDCATALOG.
  GS_FIELDCATALOG-FIELDNAME = 'WRBTRS'.
  GS_FIELDCATALOG-SELTEXT_M = 'İskontosuz Tutar'.
  GS_FIELDCATALOG-SELTEXT_L = 'İskontosuz Tutar'.
  GS_FIELDCATALOG-COL_POS = '7'.
  APPEND GS_FIELDCATALOG TO GT_FIELDCATALOG.

ENDFORM.


FORM SET_LAYOUT .
  GS_LAYOUT-WINDOW_TITLEBAR = 'İskonto Tablosu'.
  GS_LAYOUT-COLWIDTH_OPTIMIZE = ABAP_TRUE.
  GS_LAYOUT-EDIT = ABAP_FALSE.
  GS_LAYOUT-ZEBRA = ABAP_TRUE.
  GS_LAYOUT-BOX_FIELDNAME = 'SELKZ'.
ENDFORM.

FORM DISPLAY_ALV .
  GS_SORT-SPOS      = 1.
  GS_SORT-TABNAME   = 'GT_ISK'.
  GS_SORT-FIELDNAME = 'BUKRS'.
  GS_SORT-UP     = ABAP_TRUE.
  APPEND GS_SORT TO GT_SORT.

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      I_PROGRAM_NAME   = SY-REPID
      I_STRUCTURE_NAME = 'ZBE_S_002'
      I_INCLNAME       = SY-REPID
    CHANGING
      CT_FIELDCAT      = GT_FIELDCATALOG.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM       = SY-REPID
      I_CALLBACK_PF_STATUS_SET = 'PF_STATUS_SET'
      I_CALLBACK_USER_COMMAND  = 'USER_COMMAND'
      IS_LAYOUT                = GS_LAYOUT
      IT_FIELDCAT              = GT_FIELDCATALOG
      IT_SORT                  = GT_SORT
      I_SAVE                   = 'X'
    TABLES
      T_OUTTAB                 = GT_ISK
    EXCEPTIONS
      PROGRAM_ERROR            = 1
      OTHERS                   = 2.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.

FORM PF_STATUS_SET USING P_EXTAB TYPE SLIS_T_EXTAB.
  SET PF-STATUS '0100'.
ENDFORM.

FORM USER_COMMAND USING P_UCOMM TYPE SY-UCOMM
                        PS_SELFIELD TYPE SLIS_SELFIELD.
  CASE P_UCOMM.
    WHEN '&SAVE_DATA'.
      DATA: LS_ISK   TYPE GTY_ISK.
      DATA ALV_GRID TYPE REF TO CL_GUI_ALV_GRID.

      CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
        IMPORTING
          E_GRID = ALV_GRID.

      CALL METHOD ALV_GRID->CHECK_CHANGED_DATA.

      LOOP AT GT_ISK INTO GS_ISK.

        IF GS_ISK-ISKO <> LS_ISK-ISKO.
          UPDATE ZBE_T_ISK SET ISKO = GS_ISK-ISKO
          WHERE LIFNR = GS_ISK-LIFNR.
        ENDIF.

      ENDLOOP.
      PERFORM GET_DATA.
      CALL METHOD ALV_GRID->REFRESH_TABLE_DISPLAY.

    WHEN '&DETAILS' .

      GV_SATIR = 0.

      LOOP AT GT_ISK INTO GS_ISK.
        IF GS_ISK-SELKZ = 'X' .
          GV_SATIR = GV_SATIR + 1.
        ENDIF.
      ENDLOOP.
      CASE GV_SATIR.
        WHEN 0.
          MESSAGE 'Detayları görebilmek için herhangi bir satır seçmeniz gerekmektedir.' TYPE 'W'. RETURN.
        WHEN 1.
          READ TABLE GT_ISK INTO GS_ISK WITH KEY SELKZ = 'X'.
          SELECT BKPF~BUKRS
                 BKPF~GJAHR
                 BKPF~BELNR
                 BSEG~BUZEI
                 BSEG~SGTXT
                 BSEG~GSBER
                 BSEG~SHKZG
                 BSEG~WRBTR
           FROM BKPF
           INNER JOIN BSEG ON BSEG~BUKRS = BKPF~BUKRS
                          AND BSEG~GJAHR = BKPF~GJAHR
                          AND BSEG~BELNR = BKPF~BELNR
           INTO CORRESPONDING FIELDS OF TABLE GT_ISKD   WHERE BKPF~BUKRS = GS_ISK-BUKRS
                                                          AND BKPF~GJAHR = GS_ISK-GJAHR
                                                          AND BKPF~BELNR = GS_ISK-BELNR.

          GS_LPOPUP-WINDOW_TITLEBAR      = 'DETAY'.
          GS_LPOPUP-ZEBRA                = 'X'.
          GS_LPOPUP-COLWIDTH_OPTIMIZE    = 'X'.
          GS_LPOPUP-BOX_FIELDNAME        = 'SELKZ'.



          CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
            EXPORTING
              I_PROGRAM_NAME   = 'ZBE_P_006'
              I_STRUCTURE_NAME = 'ZBE_S_003'
              I_INCLNAME       = 'ZBE_P_006'
            CHANGING
              CT_FIELDCAT      = GT_FCPOPUP.

          CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
            EXPORTING
              I_CALLBACK_PROGRAM       = SY-REPID
              IT_FIELDCAT              = GT_FCPOPUP
              I_CALLBACK_PF_STATUS_SET = 'PF_STATUS_SET'
              I_CALLBACK_USER_COMMAND  = 'USER_COMMAND'
              IS_LAYOUT                = GS_LPOPUP
              I_SAVE                   = 'X'
              I_SCREEN_START_COLUMN    = 15
              I_SCREEN_START_LINE      = 5
              I_SCREEN_END_COLUMN      = 71
              I_SCREEN_END_LINE        = 20
            TABLES
              T_OUTTAB                 = GT_ISKD.

        WHEN OTHERS.
          MESSAGE 'Detayları görebilmek yalnızca tek bir satır seçmeniz gerekmektedir.' TYPE 'W'. RETURN.

      ENDCASE.
  ENDCASE.

  CASE PS_SELFIELD-FIELDNAME.
    WHEN 'BELNR'.
      READ TABLE GT_ISK INTO GS_ISK INDEX PS_SELFIELD-TABINDEX.
      SET PARAMETER ID 'BLN' FIELD GS_ISK-BELNR.
      SET PARAMETER ID 'BUK' FIELD GS_ISK-BUKRS.
      SET PARAMETER ID 'GJR' FIELD GS_ISK-GJAHR.

      CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.

    WHEN 'PRINTF'.
      READ TABLE GT_ISK INTO GS_ISK INDEX PS_SELFIELD-TABINDEX.

      PERFORM GET_DATASF.


      DATA : LV_FM_NAME TYPE RS38L_FNAM.

      CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
        EXPORTING
          FORMNAME           = 'ZBE_SF_001'
        IMPORTING
          FM_NAME            = LV_FM_NAME
        EXCEPTIONS
          NO_FORM            = 1
          NO_FUNCTION_MODULE = 2
          OTHERS             = 3.
      CALL FUNCTION LV_FM_NAME
        TABLES
          GT_FATURA        = GT_FATURA
        EXCEPTIONS
          FORMATTING_ERROR = 1
          INTERNAL_ERROR   = 2
          SEND_ERROR       = 3
          USER_CANCELED    = 4
          OTHERS           = 5.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.
  ENDCASE.


ENDFORM.


FORM GET_DATASF .
  SELECT
  BKPF~BELNR
  BKPF~BLDAT
  BKPF~GJAHR
  BSEG~LIFNR
  BKPF~XBLNR
  BSEG~BUZEI
  BSEG~SGTXT
  BSEG~GSBER
  BSEG~SHKZG
  BSEG~WRBTR
  FROM BSEG
  INNER JOIN BKPF ON BKPF~BUKRS EQ BSEG~BUKRS
                 AND BKPF~GJAHR EQ BSEG~GJAHR
                 AND BKPF~BELNR EQ BSEG~BELNR
  INTO CORRESPONDING FIELDS OF TABLE GT_FATURA
    WHERE BKPF~BUKRS EQ GS_ISK-BUKRS
    AND   BKPF~GJAHR EQ GS_ISK-GJAHR
    AND   BKPF~BELNR EQ GS_ISK-BELNR.


  LOOP AT GT_FATURA INTO GS_FATURA.
    GS_FATURA-BELNR = GS_ISK-BELNR.
    GS_FATURA-GJAHR = GS_ISK-GJAHR.
    GS_FATURA-LIFNR = GS_ISK-LIFNR.
    GS_FATURA-WRBTR = GS_ISK-WRBTRS.
    GS_FATURA-WRBTRI = GS_ISK-WRBTR.
    GS_FATURA-ISKO  = GS_ISK-ISKO.
    MODIFY GT_FATURA FROM GS_FATURA.

  ENDLOOP.
ENDFORM.